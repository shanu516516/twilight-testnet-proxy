version: "3"

services:

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        DOCKER_BUILDKIT: 1
    hostname: frontend
    restart: always
    networks:
      - proxy-network
    ports:
      - 3000:3000

  nyks_tx_decoder:
    build: ./nyks_tx_decoder
    restart: always
    container_name: nyks_tx_decoder
    hostname: nyks_tx_decoder
    networks:
      - proxy-network
    ports:
      - 8080:8080

  nginx:
    build: ./nginx
    restart: always
    container_name: nginx
    hostname: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      # Required
      DOMAIN: ${DOMAIN}
      # Optional overrides (defaults provided in template)
      EXPLORER_ORIGIN: ${EXPLORER_ORIGIN:-172.17.0.1:8081}
      LCD_HOST: ${LCD_HOST:-172.17.0.1:1317}
      RPC_HOST: ${RPC_HOST:-172.17.0.1:26657}
      FAUCET_HOST: ${FAUCET_HOST:-172.17.0.1:6969}
      ZKOS_HOST: ${ZKOS_HOST:-172.17.0.1:3030}
      ZKOS_KYC_HOST: ${ZKOS_KYC_HOST:-172.17.0.1:3001}
      FRONTEND: ${FRONTEND:-172.17.0.1:3000}
      WEB_BACKEND: ${WEB_BACKEND:-172.17.0.1:8088}
      RELAYER_BACKEND: ${RELAYER_BACKEND:-172.17.0.1:3031}
      ORDERAPI_BACKEND: ${ORDERAPI_BACKEND:-172.17.0.1:3032}
      WS_BACKEND: ${WS_BACKEND:-172.17.0.1:8088}
      AUTH_BACKEND: ${AUTH_BACKEND:-172.17.0.1:5000}
      VERIFIER_URL: ${VERIFIER_URL:-172.17.0.1:8080}
      WHITELIST_HOST: ${WHITELIST_HOST:-172.17.0.1:8080}
      PING_PONG_FAUCET_HOST: ${PING_PONG_FAUCET_HOST:-172.17.0.1:8082}
    networks:
      - proxy-network
    volumes:
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/nginx/ssl:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  nyks_explorer:
    build: ./nyks_explorer
    restart: always
    container_name: nyks_explorer
    hostname: nyks_explorer
    networks:
      - proxy-network
    ports:
      - 8081:80

  pingpong_faucet:
    build: ./nyks_faucet
    restart: always
    container_name: pingpong_faucet
    hostname: pingpong_faucet
    networks:
      - proxy-network
    ports:
      - 8082:8082

  certbot:
    image: certbot/certbot:latest
    volumes:
      - ./certbot/www:/var/www/certbot:rw
      - ./certbot/conf:/etc/letsencrypt:rw
    entrypoint: >
      /bin/sh -c 'trap exit TERM;
      while :; do certbot renew; sleep 12h & wait $${!}; done;'

networks:
  proxy-network:
